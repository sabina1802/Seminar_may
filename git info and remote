First Seminar

## Алгоритм действий в VSCode с Git
### 1. Внести изменения
### 2. Сохранить изменений (CTRL+S)
### 3. Добавить измененный файл
### 4. Зафиксировать файл

## Список основных команд
* git init - инициализировать локальный репозиторий.
* git add - добавить файл или все файлы (add .) к следующему коммиту.
* git version - Узнать версию гита.
* git diff - позволяет увидеть разницу между сохраненной (commit) версией файла и добавленной (add) версией файла.
* git commit -m - сохраняет, добавляя комментарий к сохраненной версии.
* git checkout - позволяет переключаться между версиями.
* git status - сообщает о состоянии репозитория.

При возникновении вопроса, какая команда и как правильно пишется, можно обратиться к гиту в терминале (git help) и он подсказывает.

# Second Seminar
20.05.2024

## Creating branch - Создание веток
* git branch branch_name - создание новой ветки.
* git checkout -b branch_name - создание и переход сразу в новую ветку.
* git branch -m [old_branch_name] [new_branch_name] - переименовывает ветку. Названия обязательно писать на латинице.

## Merging branch - Слияние веток
* git merge branch_name - слияние двух веток.

## Conflicts - Конфликты
Конфликты возникают, когда затрагивается общее рабочее пространство.

## Strategy «Subtree» - Стратегия слияния 

* git merge -s subtree branchA branchB

Это разновидность рекурсивной стратегии. При слиянии A и B, если B — дочернее поддерево A, сначала обновляется B, чтобы отразить древовидную структуру A. Кроме того, обновляется родительское дерево, которое является общим для A и B.

## Визуализация веток
* git log --graph - журнал коммитов с графическим указанием истории веток.
## Удаление веток
* git branch -d branch_name - удаляет только ранее слитую ветку.
* git branch -D branch_name - удаляет любую ветку.

# Final Seminar

## Работа с удаленными репозиториями


## 1. Регистрируемся на GitHub

## 2. Работа с чужим удаленным репозиторием

### 2.1 Fork & Clone - Копирование и скачивание чужого репозитория
* Открываем чужой репозиторий по ссылке на GitHub.
* Fork - Копируем чужой репозиторий в свой аккаунт.
* Копирум ссылку.
* Создаем папку на локальном компьютере и открываем ее.
* git clone <ссылка> - копируем удаленный репозиторий в локальную папку.
* cd <название скопированной папки> - переходим в скопированную папку.

### 2.2 Changes - Внесение своих изменений
* git checkout -b branch_name - создаем новую ветку и переходим на нее.
* вносим изменения, сохраняем, создаем коммиты.

### 2.3 Pull request - отправка запроса на вливание изменений
* git push --set-upstream origin branch_name - отправка изменений в удаленный репозиторий.
* на GitHub отправляем запрос "Compare & pull request".

## 3. Работа со своим удаленным репозиторием

### 3.1 Создание удаленного репозитория
* NEW - Добавляем новый репозиторий на GitHub, копируем ссылку на него.

### 3.2 Создание локального репозитория (или открытие существующего)
* Создаем папку с локальным репозиторием.
* Создаем файл, вносим информацию, создаем коммиты.

### 3.3 Связывание локального репозитория с удаленным
* git remote add origin <ссылка на удаленный репозиторий> - связывание.
* git branch -M master - указание ветки.
* git push -u origin master - отправка изменений.

### 3.4 Отправка (скачивание) изменений на (с) удаленного репозитория
* git push - отправка изменений на удаленный репозиторий.
* git pull - скачивание изменtybq c удаленного репозитория
